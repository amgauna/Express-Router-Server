// src/server.js/app.post

// POST new comment

  app.post('/comments/:slug', (request, reply) => {
    const { slug } = request.params;
    const { comment, replyTo } = request.body;
    const user = getUser(request);

    if (!user) return error('access denied', request, reply, 403);
    checkValidComment(db, slug, user.id, comment, replyTo, err => {
      if (err) return reply.send({ status: 'rejected', reason: err });
      let stmt = db
        .prepare(queries.insert, [user.id, slug, comment, replyTo ? +replyTo : null])
        .run(err => {
          if (err) return error(err, request, reply);
          if (!user.blocked && !user.trusted) {
            awaiting_moderation.push({ slug });
          }
          schnackEvents.emit('new-comment', {
            user: user,
            slug,
            id: stmt.lastID,
            comment,
            replyTo
          });
          reply.send({ status: 'ok', id: stmt.lastID });
        });
    });
  });
